python main_test1.py --task 2 --machine 1 2 3 4 5 6 7 --position 1 2 3 4 5 6 7 8 9 10 11 12 --heuristics 0 --base_num 11
# 1:冰箱1  2：机械臂 3：工作站1 4：工作站2 5：工作站3 6：冰箱2 7：Trash回收站
设备的id: 1 2 3 4 5 6 7
·板位资源的id:
1:冰箱1的出板位
2:机械臂位置
3:工作站1位置1
4:工作站1位置2
5:工作站2位置1
6:工作站2位置2
7:工作站3位置1
8:工作站3位置2
9:冰箱2的出版位
10:Trash回收站板位
11: 工作站1的资源:用于工作站工作
12: 工作站2的资源:用于工作站工作
其中3,4属于设备3    5,6属于设备4,    7,8属于设备5

# task 0: 冰箱1出Plate
# task 1: 机械臂取Plate
# task 2: 工作站加载Plate
# task 3: 冰箱2出Mix1
# task 4: 机械臂取Mix1
# task 5: 工作站加载Mix1
# task 6: 工作站工作
# task 7: 工作站卸载对应的Plate
# task 8: 机械臂放Plate到Hotel
# task 9: 工作站unload mix1
# task 10: 机械臂放Plate到trash

现在task对应的资源是位置资源。

task建模:task的id、task对应占用的设备和释放的设备、
task graph 的建模: task之前的先后依赖关系。
task的执行时间建模。


落地项目 + 造轮子项目 + 刷题 + 背八股
找实习、落地项目推进、c++内容补充学习、


加一个启发式模块ok, 测试待完成

一个task graph 复制多份。
写一下这个逻辑。
复制的task graph 与之前的task graph需要组成一个大的task graph, 共同计算复杂度。
test1 版本主要是测试多块板的情况下，任务图手动生成的复杂度太大了，因此希望手动生成一个后，自动复制多份。
有一个base的任务图, 之后复制多份的任务图共用一个起点和终点。

目前在main版本上进行修改迭代测试，手动生成一个base的任务图，复制一份任务图并合并，验证该


"plateProcesses": 保存所有泳道信息
"procedures": 驱动相关概念
"variables": 变量相关概念
"instruments": 设备相关概念
"instrumentSequences": 某些设备存在sequence,同一设备可能有多个sequence

由该数据结构生成任务图, 那么首先建模分为以下几个部分：任务建模、设备资源建模
有多少个task, 不含有sequence的设备对应一个task,含有sequence的设备, sequence中
每个子任务对应一个task  task的时间、task的前驱、后置、拓扑图  task的id、task对应占用的设备和释放的设备

python main_test1.py --task 2 --machine 1 2 3 4 5 6 7 --position 1 2 3 4 5 6 7 8 9 10 11 12 --heuristics 0 --base_num 11 


什么时候会产生死锁。
写几个示例文件说明
经典样例的测试情况进行一个简单的介绍。


第一次会议：
本次会议首先介绍了调度场景、调度算法目标、以及提出了当前场景中的目标问题难点。
针对当前存在的一些关键技术问题，本次讨论了调度算法的整体方向、解决问题的整体思路、另外提供了调度方面的部分资料以供参考

第一次会议主题：调度目标场景、问题难点讨论及调度算法整体解决方向讨论和指导

第二次会议: 
在详细阅读和参照专家提供的资料后, 尝试使用资料中的方法应用到我们场景中，但是遇到一些问题不能直接拿来应用。
本次会议首先提出了L1算法直接拿来应用存在的问题, 在我们场景存在一些特殊性, 本次会议针对场景的特点以及遇到的问题, 
主要对L1算法如何与我们的场景结合起来做了讨论和指导。会议明确了整体的算法框架

第二次会议主题：在项目背景下调度算法部署到当前场景存在问题以及对应解决方案的讨论

第三次会议：
依据指定的算法框架进行实现后，发现在算法细节上有些问题需要进行讨论。
本次会议当前逻辑下存在的一些算法上的问题：例如确定了任务图建模、资源建模、死锁问题、可用设备的选择逻辑等。
四个方面的算法遇到的问题，对解决方案进行了讨论。

第三次会议主题：调度算法资源建模方式以及应对死锁策略的问题讨论

第一次会议主题：调度目标场景、问题难点讨论及调度算法整体解决方向讨论和指导
第二次会议主题：在项目应用背景下调度算法部署到当前场景存在问题以及对应解决方案的讨论
第三次会议主题：调度算法资源建模方式以及应对死锁策略的问题讨论